
1)  Що таке клас?
    Клас це структура даних що позволяє нам об'єднювати базові типи даних, 
    захищати їх від зовнішнього втручання за допомогою модифікаторів доступу,
    та працювати з ними використовуючи методи

2) Яким чином клас забеспечує абстрацію, інкапсуляція та приховування даних?
    Клас надає нам можливість об'єднювати дані та методи в одну єдину сутність та 
    керувати зовнішнім втручанням використовуючи модифікатори, а в моєму розмунні
    це і зветься інкапсуляціє. Приховування даних як частина інкапсуляції реалізовується
    за допомогою модифікатора private який в класі використовується за замовчуванням
    Інтерфейс це то як взаємодіє програма з самим класом і зазвичай вони реалізуються за допомогою
    відкритих методів, що й зветься абстракцією.

3) Клас це структура даних, або спеціалізований тип даних, тоді як об'єкти це
    змінна цього типу. 

4) Методи відрізняються від функцій тим що до них можна звертатись лише через 
    об'єкти самого класа де ці методи реалізовуються. А функція вона існує 
    не залежно від об'єкту.

5) Визначне клас для подання банківського рахунку. Дані класу повинні включати
    ім'я вкладчика, номер рахунку (викристовуйте строку) і баланс. 
    Методи повинні позволяти наступне:
    • Створення об'єкта та його ініцалізація
    • Вивід імені, номер рахунку та баланс 
    • Добавлення суми до рахунку
    • Зняття суми з рахунку
    Потрібно привести об'явлення класу без реалцізації методів.

    class Score
    {
        string name;
        string score;
        double balance;

    public:

        Score();
        Score(string name, string score, double balance);
        void PrintScore();
        void RemoveBalance(double num);
        void AddBalance(double num);
    };

6) Коли викликається конструктор, а коли деструктор?
    Конструктор класа викликається коли ми іцініалізуємо об'єкт. Якщо ми не задамо 
    констуктор явно то він створиться автоматично, компілятором. Якщо ж задамо явно
    тоді автоматичний не створиться. Деструктор викликається коли об'єкти класу вже
    більше не потрібний, тобто перед видаленням самого об'єкта. 

7) Напишіть код констуктора для 5 запитання

    Score() // Це якщо ми не передаємо ніяких параметрів
	{
		name = "NoName";
		score = "0";
		balance = 0.0;
	}

	Score(string name, string score, double balance) // А це якщо передаємо
	{
		this->name = name;
		this->score = score;
		this->balance = balance;
	}

8) Що таке констуктор за замовчуванням? Де він використовується
    Конструктор за замовчуванням немає ніяких аргументів, або ж має значення 
    за замовчуванням, які передаються аргументам при створенні об'єктна. Такий 
    констуктор потрібний для того щоб ми могли об'являти об'єкти без їх ініціалізації.
    Його також можна задати явно, що я й зробив в 7 завданні

9) Змінити stock20.h так щоб в ньому були методи які повертають значення полів класу.

    #ifndef STOCK20_H_
    #define STOCK20_H_
    #include <string>

    class Stock
    {
    private:
        std::string company;
        int shares;
        double share_val;
        double total_val;
        void set_tot() { total_val = shares * share_val; }
    public:
    
        Stock(const std::string& co, long n = 0, double pr = 0.0);
        ~Stock();       
        void buy(long num, double price);
        void sell(long num, double price);
        void update(double price);
        void show() const;
        const Stock& topval(const Stock& s) const;
    
        const std::string& GetCompany() const { return company; }
        const int GetShares() const { return shares; }
        const double GetShareVal() const { return share_val; }
        const double GetTotalVal() const { return total_val; }

    };

    #endif

10) Що таке this та *this?
    Оператор this доступний лише в тілі класу. Він представляє адрес об'єкта, саме тому використовуючи -> ми можемо доступатись
    до полів цього об'єкта. А *this це вже сам об'єкт, який ми можемо повернути якщо є така потреба. 

