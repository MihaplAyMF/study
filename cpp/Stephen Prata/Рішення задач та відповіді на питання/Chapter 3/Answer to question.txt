
1) Чому в мові програмування с++ є більше одного цілочисленого типу?
    Це тому що одного типу недостатньо для вирішення спицифічних задач. 
    Якщо нам потрібно зберегти відносно маленьке число то достатньо використовувати
    тип int. Але ж що якщо це це доволі велике число, а числа int недостатньо??
    В такому випадку можна використовувати тип long. Чому ж тоді не використовувати long постійно?? 
    Тому що швидкість програми тоді впаде адже лонг займає більше пам'яті ніж int через що
    для виконання арифметичних дій тратиться більше часу. Також є і інші типи даних, які 
    вигідно використовувати для рішення певних задач. 

2)  Об'явіть змінні згідно опису нижче
    Цілочислення зміння типу short зі значенням 80 
        short num1 = 80;
    Цілочислення зміння типу unsigned int зі значенням 42110
        unsigned int num2 = 42110; 
    Цілочислення зміння зі значенням 3 000 000 000  
        auto num3 = 3000000000; // Я не впевнений чи типу int хватить, якщо так то auto його і вибере  
        long num4 = 3000000000; // Ну, але враховуючи що число велике можна використати long

3) Які міри використовуваються щоб не допустити перевищення преділ чілочисленого типу.
    Можна використовувати тип long long якщо число є дуже великим, але якщо навіть його 
    недостатньо то ще є тип long double який позволяє використовувати експоненціальний
    запис. Ми можемо записати велике число у такого мугляті 1,3213 * 10^n. Ну це лише для чисел
    Які є більші ніж може зберегти long. 


4) В чому різниця між 33L та 33;
    L це приставка що вказує на тип long
    Також є приставка такі приставки як 
    U - Unsigned можна комбінувати з S - short, L - long, LL - long long 
    Також є F - float, D - double, LD - long double
    Можна використовувати як велику так і маленьку літеру для позначення типу даних.

5) Подивість на наступні два оператора с++ та скажіть чи являються вони еквівалентними
    char grade = 65;   // Так вони являються еквівалентними, тому що тип char використовують як 
    char grade = 'A';  // символьний тип. Цей тип використовує кодування ASCII і 65 якраз таки
    означає символ 'A'

6) Як в с++ можна визначити яким символ відповідає коду 88?? Наведіть два приклади
    Можна відкрити ACSII таблицю і там перевірити який символ відповідає чифрі 88
    Але цей спосіб не дуже зручний, простіше зробити це так
    char num1 = 'B'; // Або 66
    int num2 = num1 // в num2 запишиться код символа 'B'
    Якщо тепер його вивести cout << num2 << endl; то ми побачимо числовий код.
    Якщо ж виводити num1 то виведеться символ. Метод cout виводи інформацію в залежності від типу що ми йому подаємо. 

7) Надання значення типу long змінної типу float може навести до помилки округлення. 
    А що станеться, якщо надати значення long змінної double? І що буде, якщо надати значення long long змінної double?

    Так якщо ми цілочисленому типу присвоуємо число з плавачою точкою то всі дані після точки просто відкидаються
    double doubleNum = 3.4
    int integerNum = doubleNum; // 3.4 оскільки 0.4 відкинеться то залишиться лише 3
    Якщо ж зробити навпаки 
    long longNum = 2132132141254 // Ну тут все ясно
    double doubleNum = longMum // doubleNum збереже longNum в експоненціальній лише якщо longNum 
    має не більше ніж 16 значучиш цифр. Якщо більше то може вивестись вже що завгодно.

8) Порахуйте наступні приклади
    8 * 9 + 2 = 72 + 2 = 74
    6 * 3 / 4 = 18 / 4 = 4 // Дробова частина відкидається бо обидва числа цілого типу
    3 / 4 * 6 = 0 * 6 = 0 // Те ж що і в попередньому
    6.0 * 3 / 4 = 18.0 / 4 = 4.5 // Операції множення та ділення мають однаковий пріорітет і виконуються зліва направо
    15 % 4 = 3 // Остача від ділення 

9) Припустимо, що xl і х2 є змінними типу douЬle, які ви хочете підсумувати як цілі числа, а отриманий результат привласнити
    цілісної змінної. Напишіть для цього потрібний оператор С++. 
    Що якщо ви хочете підсумувати їх як значення double, а потім перетворити результат на int?

    Це можна зробити декількома способами
    double x1{3.64}, x2{4.51}; // Ствоернння самих змінних
    int x3, x4, x5;
    x3 = x1 + x2 // вони додадуться і автоматично конвертуються в int
    x4 = int(x1) + int(x2) // спочатку перетворяться на чілі числа а вже потім додадуться
    // також для конфертації можна використовувати (int) або static_cast<int>() 
    x5 = static_cast<int>(x1 + x2) // Теж саме що і в x3 але тут явна конвертації double в int, а там неявна

10) Яким буде тип змінною в кожному з наведених прикладів
    auto cars = 15; // int 
    auto iou = 150.37f; // f вказує на тип float
    auto level = 'В'; // '' вказують на символьний тип char
    auto crat = U'/U00002155'; // char32_t 
    auto fract = 8.25f/2.5; // Скоріше за все буде float, хоча я не впевнений компілятор може привести і до типу double бо ми ділено на невказаний тип
    а компілятор 2.5 повважає як тип double. float/double поверне нам double


